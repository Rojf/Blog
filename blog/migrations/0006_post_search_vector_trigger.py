# Generated by Django 5.0.4 on 2024-04-28 17:22

from django.contrib.postgres.search import SearchVector
from django.db import migrations


def compute_search_vector(apps, schema_editor):
    Post = apps.get_model("blog", "Post")
    Post.objects.update(search_vector=SearchVector("title", "body"))


class Migration(migrations.Migration):

    dependencies = [
        ('blog', '0005_post_search_vector_post_blog_post_search__528e75_gin'),
    ]

    operations = [
        migrations.RunSQL(
            sql="""
                CREATE TRIGGER search_vector_trigger
                BEFORE INSERT OR UPDATE OF title, body, search_vector
                ON blog_post
                FOR EACH ROW EXECUTE PROCEDURE
                tsvector_update_trigger(
                    search_vector, 'pg_catalog.english', title, body
                );
                UPDATE blog_post SET search_vector = NULL;
                """,
            reverse_sql="""
                DROP TRIGGER IF EXISTS search_vector_trigger
                ON blog_post;
                """,
        ),
        migrations.RunPython(
            compute_search_vector, reverse_code=migrations.RunPython.noop
        ),
    ]
