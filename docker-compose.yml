services:
  db:
    container_name: postgres_db_container
    image: postgres:16.3
    # command:
      # - "postgres"
      # - "-c"
      # - "config_file=/etc/postgresql.conf"
    profiles: [ "all", "dev" ]
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-post_db}
      - POSTGRES_USER=${POSTGRES_USER:-admin}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-admin}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - PGDATA=${PGDATA:-/var/lib/postgresql/data}
    volumes:
      - psql-db-data:/var/lib/postgresql/data
      # - ./postgresql.conf:/etc/postgresql.conf:ro
    ports:
      - "5430:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d post_db -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
    networks:
      - backend_db
      - postgres_db


  postgres_exporter:
    container_name: postgres_exporter_container
    image: prometheuscommunity/postgres-exporter:master
    profiles: [ "all" ]
    environment:
      - DATA_SOURCE_URL=${DATA_SOURCE_URL:-postgres:5432/post_db?sslmode=disable}
      - DATA_SOURCE_USER=${DATA_SOURCE_USER:-admin}
      - DATA_SOURCE_PASS=${DATA_SOURCE_PASS:-admin}
      - PG_EXPORTER_EXTEND_QUERY_PATH="/etc/postgres_exporter/queries.yaml"
    # volumes:
    #   - ./queries.yaml:/etc/postgres_exporter/queries.yaml:ro
    ports:
      - "9187:9187"
    restart: unless-stopped
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready -d post_db -U postgres"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5
    #   start_period: 15s
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 500M
    networks:
      - postgres_db

    
  elasticsearch:
    container_name: elasticsearch_container
    image: elasticsearch:8.14.1
    profiles: [ "all", "dev" ]
    environment:
      - ELASTIC_USERNAME=${ELASTIC_USER:-admin}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD:-admin}
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - xpack.security.http.ssl.enabled=false
    volumes:
      # - ./compose/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - elasticsearch:/usr/share/elasticsearch/data:Z
    ports:
      - "9200:9200"
      - "9300:9300"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -u ${ELASTIC_USERNAME:-admin}:${ELASTIC_PASSWORD:-admin} -f https://localhost:9200/_cat/health -k"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_interval: 15s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
    networks:
      - elk


  logstash:
    container_name: logstash_container
    image: logstash:8.14.1
    environment:
      - LOGSTASH_INTERNAL_USER=${LOGSTASH_INTERNAL_USER:-admin}
      - LOGSTASH_INTERNAL_PASSWORD=${LOGSTASH_INTERNAL_PASSWORD:-admin}
    profiles: [ "all" ]
    # volumes:
      # - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      # - ./logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
    ports:
      - 5044:5044
      - 50000:50000/tcp
      - 50000:50000/udp
      - 9600:9600
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -XGET 'http://localhost:9600/_node/stats'"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_interval: 15s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    depends_on:
      - elasticsearch
    networks:
      - elk

  
  kibana:
    container_name: kibana_container
    image: kibana:8.14.1
    profiles: [ "all" ]
    environment:
      - KIBANA_SYSTEM_USERNAME=${KIBANA_SYSTEM_USER:-kibana}
      - KIBANA_SYSTEM_PASSWORD=${KIBANA_SYSTEM_PASSWORD:-admin}
    # volumes:
    #    - ./compose/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - "5601:5601"
    restart: unless-stopped
    healthcheck:           
      test: 
        # [
        #   "CMD-SHELL",
        #   "curl -u ${KIBANA_SYSTEM_USER:-admin}:${KIBANA_SYSTEM_PASSWORD:-admin} -f http://localhost:5601/api/status || exit 1"
        # ]
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_interval: 15s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    depends_on:
      - elasticsearch
    networks:
      - elk


volumes:
  psql-db-data:
  elasticsearch:

networks:
  backend_db:
    driver: bridge
  postgres_db:
    driver: bridge
  elk:
    driver: bridge
